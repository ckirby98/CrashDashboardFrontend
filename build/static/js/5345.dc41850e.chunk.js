"use strict";(globalThis.webpackChunkfrontend=globalThis.webpackChunkfrontend||[]).push([[5345],{96212:(t,e,n)=>{n.d(e,{Z:()=>g});var i=n(27366),l=n(10064),s=n(46784),r=n(84652),o=n(32718),a=n(92026),h=n(49861),c=n(89125),f=n(69912);class u{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}var p,d=n(92089);let m=p=class extends s.wq{static createEmptyBand(t,e){return new(p.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new l.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new u)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if((0,a.pC)(t))for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,d.r)(t),i=this.pixels,l=this.width*this.height,s=i.length;let r,o,a;const h=[];for(let c=0;c<s;c++){a=p.createEmptyBand(t,l),r=i[c];for(let t=0;t<l;t++)o=r[t],a[t]=o>n?n:o<e?e:o;h.push(a)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if((0,a.Wi)(t)||0===t.length||!e||0===e.length)return this;const i=e.length,l=t.some((t=>t>=e.length)),s=i===t.length&&!t.some(((t,e)=>t!==e));return l||s?this:new p({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new p({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;(0,a.pC)(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const n=p.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,r.d9)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l||!l.length)return void o.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,r,h,c;s=r=h=l[0],l.length>=3?(r=l[1],h=l[2]):2===l.length&&(r=l[1]);const f=new Uint32Array(t),u=this.width*this.height;if(s.length===u)if((0,a.pC)(e)&&e.length===u)if(n)for(c=0;c<u;c++){const t=e[c];if(t){const e=t/255;f[c]=i?t<<24|h[c]*e<<16|r[c]*e<<8|s[c]*e:t<<24|h[c]<<16|r[c]<<8|s[c]}}else for(c=0;c<u;c++)e[c]&&(f[c]=255<<24|h[c]<<16|r[c]<<8|s[c]);else for(c=0;c<u;c++)f[c]=255<<24|h[c]<<16|r[c]<<8|s[c];else o.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e||!e.length)return void o.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,r=0,h=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(r=Math.min(r,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;h=Math.max(h,e)}s=255/h}else{let t=255;"s8"===l?(r=-128,t=127):"u16"===l?t=65535:"s16"===l?(r=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(r=-2147483648,t=2147483647):"f32"===l?(r=-34e38,t=34e38):"f64"===l&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-r)}const c=new Uint32Array(t),f=this.width*this.height;let u,p,d,m,g;if(u=p=d=e[0],u.length!==f)return o.Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(p=e[1],e.length>=3&&(d=e[2]),(0,a.pC)(n)&&n.length===f)for(m=0;m<f;m++)n[m]&&(c[m]=255<<24|(d[m]-r)*s<<16|(p[m]-r)*s<<8|(u[m]-r)*s);else for(m=0;m<f;m++)c[m]=255<<24|(d[m]-r)*s<<16|(p[m]-r)*s<<8|(u[m]-r)*s;else if((0,a.pC)(n)&&n.length===f)for(m=0;m<f;m++)g=(u[m]-r)*s,n[m]&&(c[m]=255<<24|g<<16|g<<8|g);else for(m=0;m<f;m++)g=(u[m]-r)*s,c[m]=255<<24|g<<16|g<<8|g}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return o.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,s,r;i=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):2===e.length&&(l=e[1]);const h=this.width*this.height;if(i.length!==h)return o.Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let c=0;if((0,a.pC)(n)&&n.length===h)for(r=0;r<h;r++)t[c++]=i[r],t[c++]=l[r],t[c++]=s[r],t[c++]=1&n[r];else for(r=0;r<h;r++)t[c++]=i[r],t[c++]=l[r],t[c++]=s[r],t[c++]=1}_calculateBandStatistics(t,e){let n=1/0,i=-1/0;const l=t.length;let s,r=0;if((0,a.pC)(e))for(s=0;s<l;s++)e[s]&&(r=t[s],n=r<n?r:n,i=r>i?r:i);else for(s=0;s<l;s++)r=t[s],n=r<n?r:n,i=r>i?r:i;return new u(n,i)}};(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"width",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"height",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"pixelType",void 0),(0,i._)([(0,c.p)("pixelType")],m.prototype,"castPixelType",null),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"validPixelCount",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"mask",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"maskIsAlpha",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"pixels",void 0),(0,i._)([(0,h.Cb)()],m.prototype,"premultiplyAlpha",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"statistics",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"depthCount",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"noDataValues",void 0),(0,i._)([(0,h.Cb)({json:{write:!0}})],m.prototype,"bandMasks",void 0),m=p=(0,i._)([(0,f.j)("esri.layers.support.PixelBlock")],m);const g=m},92089:(t,e,n)=>{n.d(e,{A:()=>o,r:()=>r});const i=9999999e31,l=2e-7,s={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function r(t){return s[t]??[-34028234663852886e22,34028234663852886e22]}function o(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:s,statistics:o,pixelType:a}=t,h=s[0].length,c=t.bandMasks??[],f=t.mask??new Uint8Array(h).fill(255),u="f32"===a||"f64"===a,p=r(a);let d=!1;for(let r=0;r<s.length;r++){const t="number"==typeof e?e:e[r];if(null==t)continue;const m=o?.[r].minValue??p[0],g=o?.[r].maxValue??p[1];if(m>t+Number.EPSILON||g<t-Number.EPSILON)continue;const x=c[r]||new Uint8Array(h).fill(255),w=s[r],y=n?.customFloatTolerance;if(u&&0!==y){let e=y;e||(e=Math.abs(t)>=i?l*Math.abs(t):"f32"===a?2**-23:Number.EPSILON);for(let n=0;n<w.length;n++)x[n]&&Math.abs(w[n]-t)<e&&(w[n]=0,x[n]=0,f[n]=0,d=!0)}else for(let e=0;e<w.length;e++)x[e]&&w[e]===t&&(w[e]=0,x[e]=0,f[e]=0,d=!0);c[r]=x}d&&(t.bandMasks=c,t.mask=f),d&&"updateStatistics"in t&&t.updateStatistics()}},17314:(t,e,n)=>{n.d(e,{CD:()=>l,DX:()=>i,Gd:()=>u,Kh:()=>v,Pz:()=>p,Qh:()=>D,SJ:()=>d,Uk:()=>L,Vl:()=>F,XV:()=>m,a2:()=>w,hd:()=>h,nA:()=>C,nk:()=>c,oB:()=>b,pW:()=>P,qF:()=>f,sS:()=>A,us:()=>T,wV:()=>g,zp:()=>x});var i,l,s,r=n(92026),o=n(96212),a=n(92089);(s=i||(i={}))[s.matchAny=0]="matchAny",s[s.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(l||(l={}));const h=6;function c(t){return(0,r.pC)(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function f(t,e){if(!e?.length||!c(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new o.Z({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function u(t){if(!t?.length||t.some((t=>!c(t))))return null;if(1===t.length)return(0,r.pC)(t[0])?t[0].clone():null;const e=t,{width:n,height:i,pixelType:l}=e[0];if(e.some((t=>t.width!==n||t.height!==i)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let a=null;s.length&&(a=new Uint8Array(n*i),a.set(s[0]),s.length>1&&M(s.slice(1),a));const h=[];e.forEach((({pixels:t})=>h.push(...t)));const f=e.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return f.forEach((t=>u.push(...t))),new o.Z({pixelType:l,width:n,height:i,mask:a,pixels:h,statistics:u.length?u:null})}function p(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),s=new Uint8Array(4*l),r=[];let o,a=0,h=0;const c=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:c};if(t.fillUnspecified)for(o=n[h],a=o[0]-i;a<l;a++)s[4*a]=o[1],s[4*a+1]=o[2],s[4*a+2]=o[3],s[4*a+3]=c?o[4]:255,a===o[0]-i&&(o=h===n.length-1?o:n[++h]);else for(a=0;a<n.length;a++)o=n[a],h=4*(o[0]-i),s[h]=o[1],s[h+1]=o[2],s[h+2]=o[3],s[h+3]=c?o[4]:255;return{indexedColormap:s,offset:i,alphaSpecified:c}}function d(t,e){if(!c(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const s=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:o,indexed2DColormap:a,offset:h,alphaSpecified:f}=e;let u=0;const p=i[0],d=new Uint8Array(p.length),m=new Uint8Array(p.length),g=new Uint8Array(p.length);let x,w=0;if(o){const t=o.length-1;if((0,r.pC)(l))for(u=0;u<s;u++)l[u]&&(w=4*(p[u]-h),w<h||w>t?l[u]=0:(d[u]=o[w],m[u]=o[w+1],g[u]=o[w+2],l[u]=o[w+3]));else{for(l=new Uint8Array(s),u=0;u<s;u++)w=4*(p[u]-h),w<h||w>t?l[u]=0:(d[u]=o[w],m[u]=o[w+1],g[u]=o[w+2],l[u]=o[w+3]);n.mask=l}}else if(a)if((0,r.pC)(l))for(u=0;u<s;u++)l[u]&&(x=a[p[u]],d[u]=x[0],m[u]=x[1],g[u]=x[2],l[u]=x[3]);else{for(l=new Uint8Array(s),u=0;u<s;u++)x=a[p[u]],d[u]=x[0],m[u]=x[1],g[u]=x[2],l[u]=x[3];n.mask=l}return n.pixels=[d,m,g],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n}function m(t,e){if(!c(t))return null;const{pixels:n,mask:i}=t,l=n.length;let s=e.lut;const{offset:r}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const a=[],h=e.outputPixelType||"u8";for(let o=0;o<l;o++){const t=g(n[o],i,s[o],r||0,h);a.push(t)}const f=new o.Z({width:t.width,height:t.height,pixels:a,mask:i,pixelType:h});return f.updateStatistics(),f}function g(t,e,n,i,l){const s=t.length,r=o.Z.createEmptyBand(l,s);if(e)for(let o=0;o<s;o++)e[o]&&(r[o]=n[t[o]-i]);else for(let o=0;o<s;o++)r[o]=n[t[o]-i];return r}function x(t,e){if(!c(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,s=e.length,r=Math.floor(s/2),o=e[Math.floor(r)],a=i[0];let h,f,u,p,d,m,g=!1;const x=new Uint8Array(l),w=new Uint8Array(l),y=new Uint8Array(l);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(M?255:1),n.mask=k),d=0;d<l;d++)if(k[d]){for(h=a[d],g=!1,m=r,f=o,u=0,p=s-1;p-u>1;){if(h===f.value){g=!0;break}h>f.value?u=m:p=m,m=Math.floor((u+p)/2),f=e[Math.floor(m)]}g||(h===e[u].value?(f=e[u],g=!0):h===e[p].value?(f=e[p],g=!0):h<e[u].value?(g=!1,f=null):h>e[u].value&&(h<e[p].value?(f=e[u],g=!0):p===s-1?(g=!1,f=null):(f=e[p],g=!0))),g?(x[d]=f.mappedColor[0],w[d]=f.mappedColor[1],y[d]=f.mappedColor[2],k[d]=f.mappedColor[3]):x[d]=w[d]=y[d]=k[d]=0}return n.pixels=[x,w,y],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function w(t,e){if(!c(t))return null;const{width:n,height:i}=t,{inputRanges:l,outputValues:s,outputPixelType:r,noDataRanges:h,allowUnmatched:f,isLastInputRangeInclusive:u}=e,p=t.pixels[0],d=o.Z.createEmptyBand(r,p.length),m=t.mask,g=new Uint8Array(n*i);m?g.set(m):g.fill(255);const x=t.pixelType.startsWith("f")?1e-6:0,w=l.map((t=>t-x));w[0]=l[0],w[w.length-1]=l[l.length-1]+(u?1e-6:0);const y=l.length/2,[k,M]=(0,a.r)(r);for(let o=0;o<i;o++)for(let t=0;t<n;t++){const e=o*n+t;if(g[e]){const t=p[e];let n=!1;for(let i=y-1;i>=0;i--)if(t===w[2*i]||t>w[2*i]&&t<w[2*i+1]){d[e]=s[i],n=!0;break}n||(f?d[e]=t>M?M:t<k?k:t:g[e]=0)}}if(h?.length)for(let o=0;o<i;o++)for(let t=0;t<n;t++){const e=o*n+t;if(!m||m[e]){const t=p[e];for(let n=0;n<y;n+=2)if(t>=h[n]&&t<=h[n+1]){d[e]=0,g[e]=0;break}}}return new o.Z({width:n,height:i,pixelType:r,pixels:[d],mask:g})}function y(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,r=!!e?.length;for(let o=0;o<t.length;o++)if(i[o]){const n=t[o];if(r){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[o]=0)}i[o]&&(n===s||l?.has(n))&&(i[o]=0)}}function k(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function M(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function A(t,e){if(!c(t))return null;const{width:n,height:i,pixels:l}=t,s=n*i,r=new Uint8Array(s);t.mask?r.set(t.mask):r.fill(255);const a=l.length,{includedRanges:h,noDataValues:f,outputPixelType:u,matchAll:p,lookups:d}=e;if(d){const t=[];for(let e=0;e<a;e++){const n=d[e],i=g(l[e],r,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?r.set(t[0]):p?k(t,r):M(t,r)}else if(p){const t=[];for(let e=0;e<a;e++){const n=new Uint8Array(s);n.set(r),y(l[e],h?.slice(2*e,2*e+2),f?.[e],n),t.push(n)}1===t.length?r.set(t[0]):k(t,r)}else for(let o=0;o<a;o++)y(l[o],h?.slice(2*o,2*o+2),f?.[o],r);return new o.Z({width:n,height:i,pixelType:u,pixels:l,mask:r})}function b(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:l,noDataRanges:s,isLastInputRangeInclusive:r,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const c=e.includes("16")?65536:256,f=e.includes("s")?-c/2:0,u=o.Z.createEmptyBand(h,c),p=new Uint8Array(c);l&&p.fill(255);const[d,m]=(0,a.r)(h);if(n?.length&&i?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],r&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=i[n]>m?m:i[n]<d?d:i[n],l=Math.ceil(e[2*n]-f),s=Math.floor(e[2*n+1]-f);for(let e=l;e<=s;e++)u[e]=t,p[e]=255}}if(s?.length)for(let o=0;o<s.length;o++){const t=Math.ceil(s[2*o]-f),e=Math.floor(s[2*o+1]-f);for(let n=t;n<=e;n++)p[n]=0}return{lut:u,offset:f,mask:p}}function C(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,s=new Uint8Array(i);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-l),n=Math.floor(e[2*r+1]-l);for(let e=t;e<=n;e++)s[e]=255}else s.fill(255);if(n)for(let r=0;r<n.length;r++)s[n[r]-l]=0;return{lut:s,offset:l}}function v(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(!n||(0,r.Wi)(n.pixelBlock))return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(i,l),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),c=Math.max.apply(null,o.map((t=>t.extent.xmax))),f=Math.max.apply(null,o.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-a)/i),y:Math.round((f-e.ymax)/l)},p={width:Math.round((c-a)/i),height:Math.round((f-h)/l)},d={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==o.length||u.x<0||u.y<0||p.width<d.width||p.height<d.height?null:{extent:e,pixelBlock:T(o.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:d})}}function U(t,e,n,i,l,s){const{width:r,height:o}=n.block,{x:a,y:h}=n.offset,{width:c,height:f}=n.mosaic,u=function(t,e,n,i,l,s,r,o){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:s<=i*e?0:s<i*e+e?s-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:s+o<=i*e?0:s+o<i*e+e?s+o-i*e:e}}(r,o,i,l,a,h,c,f);let p=0,d=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=r*s.resolutionX,n=s.startX+i*e;n<t&&n+e>t?d=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,d=0)}if(u.xmax-=d,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p,s=m*r;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e[s+i]}else for(let m=u.ymin;m<u.ymax;m++){const n=(l*o+m-h)*c+(i*r-a)+p;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e}}function T(t,e,n={}){const{clipOffset:i,clipSize:l,alignmentInfo:s,blockWidths:a}=n;if(a)return function(t,e,n){const i=t.find((t=>(0,r.pC)(t)));if((0,r.Wi)(i))return null;const l=t.some((t=>!(0,r.pC)(t)||!!t.mask)),{width:s,height:a}=e,h=l?new Uint8Array(s*a):null,{blockWidths:f}=n,u=[],p=i.getPlaneCount(),d=o.Z.getPixelArrayConstructor(i.pixelType);if(l)for(let o=0,g=0;o<t.length;g+=f[o],o++){const e=t[o];if(!c(e))continue;const n=(0,r.Wg)(e.mask);for(let t=0;t<a;t++)for(let i=0;i<f[o];i++)h[t*s+i+g]=null==n?255:n[t*e.width+i]}for(let r=0;r<p;r++){const e=new d(s*a);for(let n=0,i=0;n<t.length;i+=f[n],n++){const l=t[n];if(!c(l))continue;const o=l.pixels[r];if(null!=o)for(let t=0;t<a;t++)for(let r=0;r<f[n];r++)e[t*s+r+i]=o[t*l.width+r]}u.push(e)}const m=new o.Z({width:s,height:a,mask:h,pixels:u,pixelType:i.pixelType});return m.updateStatistics(),m}(t,e,{blockWidths:a});const h=t.find((t=>c(t)));if((0,r.Wi)(h))return null;const f=l?l.width:e.width,u=l?l.height:e.height,p=h.width,d=h.height,m=e.width/p,g=e.height/d,x={offset:i||{x:0,y:0},mosaic:l||e,block:{width:p,height:d}},w=h.pixelType,y=o.Z.getPixelArrayConstructor(w),k=h.pixels.length,M=[];let A,b,C;for(let r=0;r<k;r++){b=new y(f*u);for(let e=0;e<g;e++)for(let n=0;n<m;n++){const i=t[e*m+n];c(i)&&(A=i.pixels[r],U(b,A,x,n,e,s))}M.push(b)}if(t.some((t=>(0,r.Wi)(t)||(0,r.pC)(t.mask)&&t.mask.length>0))){C=new Uint8Array(f*u);for(let e=0;e<g;e++)for(let n=0;n<m;n++){const i=t[e*m+n],l=(0,r.pC)(i)?i.mask:null;(0,r.pC)(l)?U(C,l,x,n,e,s):U(C,i?1:0,x,n,e,s)}}const v=new o.Z({width:f,height:u,pixels:M,pixelType:w,mask:C});return v.updateStatistics(),v}function P(t,e,n){if(!c(t))return null;const{width:i,height:l}=t,s=e.x,r=e.y,o=n.width+s,a=n.height+r;if(s<0||r<0||o>i||a>l)return t;if(0===s&&0===r&&o===i&&a===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const h=t.mask;for(let c=0;c<l;c++){const t=c*i;for(let e=0;e<i;e++)h[t+e]=c<r||c>=a||e<s||e>=o?0:1}return t.updateStatistics(),t}function I(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let s=l.next();for(;!s.done;)i=t.get(s.value),i>e&&(n=s.value,e=i),s=l.next();return n}function _(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function B(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function S(t,e,n){let{x:i,y:l}=e;const{width:s,height:a}=n;if(0===i&&0===l&&a===t.height&&s===t.width)return t;const{width:h,height:f}=t,u=Math.max(0,l),p=Math.max(0,i),d=Math.min(i+s,h),m=Math.min(l+a,f);if(d<0||m<0||!c(t))return null;i=Math.max(0,-i),l=Math.max(0,-l);const{pixels:g}=t,x=s*a,w=g.length,y=[];for(let r=0;r<w;r++){const e=g[r],n=o.Z.createEmptyBand(t.pixelType,x);for(let t=u;t<m;t++){const r=t*h;let o=(t+l-u)*s+i;for(let t=p;t<d;t++)n[o++]=e[r+t]}y.push(n)}const k=new Uint8Array(x),M=(0,r.Wg)(t.mask);for(let r=u;r<m;r++){const t=r*h;let e=(r+l-u)*s+i;for(let n=p;n<d;n++)k[e++]=M?M[t+n]:1}const A=new o.Z({width:n.width,height:n.height,pixelType:t.pixelType,pixels:y,mask:k});return A.updateStatistics(),A}function V(t,e=!0){if(!c(t))return null;const{pixels:n,width:i,height:l,mask:s,pixelType:a}=t,h=[],f=Math.round(i/2),u=Math.round(l/2),p=l-1,d=i-1;for(let r=0;r<n.length;r++){const t=n[r],s=o.Z.createEmptyBand(a,f*u);let c=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=t[n*i+l];if(e){const e=l===d?r:t[n*i+l+1],o=n===p?r:t[n*i+l+i],a=l===d?o:n===p?e:t[n*i+l+i+1];s[c++]=(r+e+o+a)/4}else s[c++]=r}h.push(s)}let m=null;if((0,r.pC)(s)){m=new Uint8Array(f*u);let t=0;for(let n=0;n<l;n+=2)for(let l=0;l<i;l+=2){const r=s[n*i+l];if(e){const e=l===d?r:s[n*i+l+1],o=n===p?r:s[n*i+l+i],a=l===d?o:n===p?e:s[n*i+l+i+1];m[t++]=r*e*o*a?1:0}else m[t++]=r}}return new o.Z({width:f,height:u,pixelType:a,pixels:h,mask:m})}function F(t,e,n){if(!c(t))return null;const{width:i,height:l}=e;let{width:s,height:r}=t;const o=new Map,a={x:0,y:0},h=null==n?1:1+n;let f=t;for(let c=0;c<h;c++){const t=Math.ceil(s/i),n=Math.ceil(r/l);for(let s=0;s<n;s++){a.y=s*l;for(let n=0;n<t;n++){a.x=n*i;const t=S(f,a,e);o.set(`${c}/${s}/${n}`,t)}}c<h-1&&(f=V(f)),s=Math.round(s/2),r=Math.round(r/2)}return o}function Z(t,e,n,i,l=0){const{width:s,height:r}=t,{width:o,height:a}=e,h=i.cols,c=i.rows,f=Math.ceil(o/h-.1/h),u=Math.ceil(a/c-.1/c);let p,d,m,g,x,w,y;const k=f*h,M=k*u*c,A=new Float32Array(M),b=new Float32Array(M),C=new Uint32Array(M),v=new Uint32Array(M);let U,T,P=0;for(let I=0;I<u;I++)for(let t=0;t<f;t++){p=12*(I*f+t),d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){P=(I*c+e)*k+t*h,T=(e+.5)/c;for(let t=0;t<e;t++)U=(t+.5)/h,A[P+t]=(d*U+m*T+g)*s+l,b[P+t]=(x*U+w*T+y)*r+l,C[P+t]=Math.floor(A[P+t]),v[P+t]=Math.floor(b[P+t])}p+=6,d=n[p],m=n[p+1],g=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){P=(I*c+e)*k+t*h,T=(e+.5)/c;for(let t=e;t<h;t++)U=(t+.5)/h,A[P+t]=(d*U+m*T+g)*s+l,b[P+t]=(x*U+w*T+y)*r+l,C[P+t]=Math.floor(A[P+t]),v[P+t]=Math.floor(b[P+t])}}return{offsets_x:A,offsets_y:b,offsets_xi:C,offsets_yi:v,gridWidth:k}}function D(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:s,gridWidth:r}=Z(t,t,n,{rows:i[0],cols:i[1]}),{width:o,height:a}=t,h=new Float32Array(o*a),c=180/Math.PI;for(let f=0;f<a;f++)for(let t=0;t<o;t++){const e=f*r+t,n=0===f?e:e-r,i=f===a-1?e:e+r,u=l[n]-l[i],p=s[i]-s[n];if(isNaN(u)||isNaN(p))h[f*o+t]=90;else{let e=Math.atan2(p,u)*c;e=(360+e)%360,h[f*o+t]=e}}return h}function L(t,e,n,i,l="nearest"){if(!c(t))return null;"majority"===l&&(t=function(t){if(!c(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,s=l[0],o=e.pixels[0],a=(0,r.Wg)(t.mask);for(let r=2;r<i-1;r++){const t=new Map;for(let i=r-2;i<r+2;i++)for(let e=0;e<4;e++){const l=i*n+e;B(t,s[l],a?a[l]:1)}o[r*n]=I(t),o[r*n+1]=o[r*n+2]=o[r*n];let e=3;for(;e<n-1;e++){let i=(r-2)*n+e+1;B(t,s[i],a?a[i]:1),i=(r-1)*n+e+1,B(t,s[i],a?a[i]:1),i=r*n+e+1,B(t,s[i],a?a[i]:1),i=(r+1)*n+e+1,B(t,s[i],a?a[i]:1),i=(r-2)*n+e-3,_(t,s[i],a?a[i]:1),i=(r-1)*n+e-3,_(t,s[i],a?a[i]:1),i=r*n+e-3,_(t,s[i],a?a[i]:1),i=(r+1)*n+e-3,_(t,s[i],a?a[i]:1),o[r*n+e]=I(t)}o[r*n+e+1]=o[r*n+e]}for(let r=0;r<n;r++)o[r]=o[n+r]=o[2*n+r],o[(i-1)*n+r]=o[(i-2)*n+r];return e.updateStatistics(),e}(t));const{pixels:s,mask:a,pixelType:h}=t,f=t.width,u=t.height,p=o.Z.getPixelArrayConstructor(h),d=s.length,{width:m,height:g}=e;let x=!1;for(let r=0;r<n.length;r+=3)-1===n[r]&&-1===n[r+1]&&-1===n[r+2]&&(x=!0);const{offsets_x:w,offsets_y:y,offsets_xi:k,offsets_yi:M,gridWidth:A}=Z({width:f,height:u},e,n,i,"majority"===l?.5:0);let b;const C=(t,e,n)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let l=0;l<g;l++){b=l*A;for(let s=0;s<m;s++){if(w[b]<0||y[b]<0)t[l*m+s]=0;else if(n)t[l*m+s]=e[k[b]+M[b]*f];else{const n=Math.floor(w[b]),r=Math.floor(y[b]),o=Math.ceil(w[b]),h=Math.ceil(y[b]),c=w[b]-n,u=y[b]-r;if(!a||a[n+r*f]&&a[n+r*f]&&a[n+h*f]&&a[o+h*f]){const a=(1-c)*e[n+r*f]+c*e[o+r*f],p=(1-c)*e[n+h*f]+c*e[o+h*f];t[l*m+s]=(1-u)*a+u*p+i}else t[l*m+s]=e[k[b]+M[b]*f]}b++}}},v=[];let U;for(let r=0;r<d;r++)U=new p(m*g),C(U,s[r],"nearest"===l||"majority"===l),v.push(U);const T=new o.Z({width:m,height:g,pixelType:h,pixels:v});if((0,r.pC)(a))T.mask=new Uint8Array(m*g),C(T.mask,a,!0);else if(x){T.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)T.mask[t]=w[t]<0||y[t]<0?0:1}return T.updateStatistics(),T}},64145:(t,e,n)=>{n.d(e,{BH:()=>w,K:()=>I,KC:()=>g,NL:()=>c,QI:()=>x,Tg:()=>p,Yx:()=>f,nb:()=>B,wF:()=>_,xQ:()=>m});var i=n(43404),l=n(92026),s=n(96212),r=n(17314);const o=new Map;o.set("meter-per-second",1),o.set("kilometer-per-hour",.277778),o.set("knots",.514444),o.set("feet-per-second",.3048),o.set("mile-per-hour",.44704);const a=180/Math.PI,h=5,c=new i.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function f(t,e){return o.get(t)/o.get(e)||1}function u(t){return(450-t)%360}function p(t,e="geographic"){const[n,i]=t,l=Math.sqrt(n*n+i*i);let s=Math.atan2(i,n)*a;return s=(360+s)%360,"geographic"===e&&(s=u(s)),[l,s]}function d(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u(n)),n%=360;const i=t[0];return[i*Math.cos(n/a),i*Math.sin(n/a)]}function m(t,e,n,i="geographic"){if(!(0,r.nk)(t)||(0,l.Wi)(n))return t;const s="vector-magdir"===e?t.clone():(0,l.Wg)(g(t,e)),o=s.pixels[1];for(let l=0;l<o.length;l++)o[l]="geographic"===i?(o[l]+n[l]+270)%360:(o[l]+360-n[l])%360;return"vector-magdir"===e?s:g(s,"vector-magdir")}function g(t,e,n="geographic",i=1){if(!(0,r.nk)(t))return t;const{pixels:l,width:o,height:a}=t,h=o*a,c=l[0],f=l[1],u=t.pixelType.startsWith("f")?t.pixelType:"f32",m=s.Z.createEmptyBand(u,h),g=s.Z.createEmptyBand(u,h);let x=0;for(let s=0;s<a;s++)for(let t=0;t<o;t++)"vector-uv"===e?([m[x],g[x]]=p([c[x],f[x]],n),m[x]*=i):([m[x],g[x]]=d([c[x],f[x]],n),m[x]*=i,g[x]*=i),x++;const w=new s.Z({pixelType:u,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[m,g]});return w.updateStatistics(),w}function x(t,e,n=1){if(1===n||!(0,r.nk)(t))return t;const i=t.clone(),{pixels:l,width:s,height:o}=i,a=l[0],h=l[1];let c=0;for(let r=0;r<o;r++)for(let t=0;t<s;t++)"vector-uv"===e?(a[c]*=n,h[c]*=n):a[c]*=n,c++;return i.updateStatistics(),i}function w(t,e,n,i,s){if((0,l.Wi)(s)||!s.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const r=s.xmin,o=s.ymax,a=(t.xmax-t.xmin)/e*i,h=(t.ymax-t.ymin)/n*i,c=(a+h)/2;return t.xmin=r+Math.floor((t.xmin-r)/a)*a,t.xmax=r+Math.ceil((t.xmax-r)/a)*a,t.ymin=o+Math.floor((t.ymin-o)/h)*h,t.ymax=o+Math.ceil((t.ymax-o)/h)*h,{extent:t,width:Math.round(t.width/a),height:Math.round(t.height/h),resolution:c}}const y=k(0,0,0);function k(t=0,e=0,n=Math.PI,i=!0){i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,s=13*l,r=-7*l,o=-2*l,a=-16*l,h=21.75,[c,f]=A(0,e+s,n,h),[u,p]=A(t-5.5,e+r,n,h),[d,m]=A(t+5.5,e+r,n,h),[g,x]=A(t-1.5,e+o,n,h),[w,y]=A(t+1.5,e+o,n,h),[k,M]=A(t-1.5,e+a,n,h),[b,C]=A(t+1.5,e+a,n,h);return[c,f,u,p,g,x,w,y,d,m,k,M,b,C]}function M(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=n?-1:1,l=5*i,s=20*i,r=25*i,o=45,a=2*i,c=n?1:-1,f=5*c;let[u,p]=[0+f,0-s],[d,m]=[u+2*c,p],[g,x]=[d-0*c,m+a],[w,y]=[0-f,0-r],[k,M]=[w+0*c,y-a],b=Math.ceil(t/h),C=Math.floor(b/10);b-=8*C;const v=[],U=[];for(let h=0;h<b/2;h++,C--){C<=0&&b%2==1&&h===(b-1)/2&&(w=0,k=w+0*c,y=(y+p)/2,M=y-a);const[t,n]=A(w,y,e,o);if(C>0){const[i,l]=A(d,y,e,o),[s,r]=A(u,p,e,o);v.push(i),v.push(l),v.push(t),v.push(n),v.push(s),v.push(r)}else{const[i,l]=A(d,m,e,o),[s,r]=A(g,x,e,o),[a,h]=A(k,M,e,o);U.push(t),U.push(n),U.push(a),U.push(h),U.push(s),U.push(r),U.push(i),U.push(l)}y+=l,p+=l,m+=l,x+=l,M+=l}const[T,P]=A(0+f,0+s,e,o),I=7*c,[_,B]=A(0+I,0+s,e,o),[S,V]=A(0+f,0-r,e,o),[F,Z]=A(0+I,0-r,e,o);return{pennants:v,barbs:U,shaft:[T,P,_,B,S,V,F,Z]}}function A(t,e,n,i=1){const l=Math.sqrt(t*t+e*e)/i,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+s-n)%(2*Math.PI)]}const b=[0,1,3,6,10,16,21,27,33,40,47,55,63],C=[0,.5,1,1.5,2],v=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function U(t,e,n,i){const l=f(i||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*l)break}else if(t<=e[s]*l)break;return Math.min(s-1,e.length-2)}function T(t,e,n,i,l){let s=0;switch(e){case"beaufort_kn":s=U(t,b,"knots",n);break;case"beaufort_km":s=U(t,b,"kilometer-per-hour",n);break;case"beaufort_ft":s=U(t,b,"feet-per-second",n);break;case"beaufort_m":s=U(t,b,"meter-per-second",n);break;case"classified_arrow":s=U(t,l??[],i,n);break;case"ocean_current_m":s=U(t,C,"meter-per-second",n);break;case"ocean_current_kn":s=U(t,v,"knots",n)}return s}const P=[];function I(t,e){let n=0,i=0;const{width:l,height:s,mask:r}=t,o=t.pixels[0],a=[],u=[],p=f(c.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?h:Number.MAX_VALUE;for(let h=0;h<s;h++)for(let t=0;t<l;t++){const e=o[h*l+t]*p;if((!r||r[h*l+t])&&e<d){for(let i=0;i<4;i++)a[n++]=(t+.5)/l,a[n++]=(h+.5)/s,a[n++]=i<2?-.5:.5,a[n++]=i%2==0?-.5:.5,a[n++]=0,a[n++]=e;const r=4*(n/24-1);u[i++]=r,u[i++]=r+1,u[i++]=r+2,u[i++]=r+1,u[i++]=r+2,u[i++]=r+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(u)}}function _(t,e){return"simple_scalar"===e.style?I(t,e):"wind_speed"===e.style?function(t,e){if(0===P.length)for(let h=0;h<30;h++)P.push(M(5*h,0,!e.invertDirection));const n=f(c.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:s}=t,r=t.pixels[0],o=t.pixels[1],a=[],u=[];let p=0,d=0;for(let c=0;c<l;c++)for(let t=0;t<i;t++){const e=c*i+t,f=r[e]*n;if((!s||s[c*i+t])&&f>=h){const n=(o[e]+360)%360/180*Math.PI,{pennants:s,barbs:r,shaft:h}=P[Math.min(Math.floor(f/5),29)];if(s.length+r.length===0)continue;let m=a.length/6;const g=(t+.5)/i,x=(c+.5)/l;for(let t=0;t<s.length;t+=2)a[p++]=g,a[p++]=x,a[p++]=s[t],a[p++]=s[t+1]+n,a[p++]=0,a[p++]=f;for(let t=0;t<r.length;t+=2)a[p++]=g,a[p++]=x,a[p++]=r[t],a[p++]=r[t+1]+n,a[p++]=0,a[p++]=f;for(let t=0;t<h.length;t+=2)a[p++]=g,a[p++]=x,a[p++]=h[t],a[p++]=h[t+1]+n,a[p++]=0,a[p++]=f;for(let t=0;t<s.length/6;t++)u[d++]=m,u[d++]=m+1,u[d++]=m+2,m+=3;for(let t=0;t<r.length/8;t++)u[d++]=m,u[d++]=m+1,u[d++]=m+2,u[d++]=m+1,u[d++]=m+2,u[d++]=m+3,m+=4;u[d++]=m+0,u[d++]=m+1,u[d++]=m+2,u[d++]=m+1,u[d++]=m+3,u[d++]=m+2,m+=4}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(u)}}(t,e):function(t,e){const{style:n,inputUnit:i,outputUnit:s,breakValues:r}=e,o=c.fromJSON(i),a=c.fromJSON(s);let h=0,f=0;const{width:u,height:p,mask:d}=t,m=t.pixels[0],g=t.pixels[1],x=(0,l.pC)(d)?d.filter((t=>t>0)).length:u*p,w=new Float32Array(42*x),M=new Uint32Array(15*x),A=e.invertDirection?k(0,0,0,!1):y;for(let l=0;l<p;l++)for(let t=0;t<u;t++){const e=l*u+t;if(!d||d[l*u+t]){const i=(g[e]+360)%360/180*Math.PI,s=T(m[e],n,o,a,r);for(let n=0;n<A.length;n+=2)w[h++]=(t+.5)/u,w[h++]=(l+.5)/p,w[h++]=A[n],w[h++]=A[n+1]+i,w[h++]=s,w[h++]=m[e];const c=7*(h/42-1);M[f++]=c,M[f++]=c+1,M[f++]=c+2,M[f++]=c+0,M[f++]=c+4,M[f++]=c+3,M[f++]=c+0,M[f++]=c+2,M[f++]=c+3,M[f++]=c+2,M[f++]=c+5,M[f++]=c+3,M[f++]=c+5,M[f++]=c+6,M[f++]=c+3}}return{vertexData:w,indexData:M}}(t,e)}function B(t,e,n,i=[0,0],l=.5){const{width:r,height:o,mask:a}=t,[h,c]=t.pixels,[f,u]=i,m=Math.round((r-f)/n),g=Math.round((o-u)/n),x=m*g,w=new Float32Array(x),y=new Float32Array(x),k=new Uint8Array(x),M="vector-uv"===e;for(let s=0;s<g;s++)for(let t=0;t<m;t++){let e=0;const i=s*m+t,g=Math.max(0,s*n+u),x=Math.max(0,t*n+f),A=Math.min(o,g+n),b=Math.min(r,x+n);for(let t=g;t<A;t++)for(let n=x;n<b;n++){const l=t*r+n;if(!a||a[l]){e++;const t=M?[h[l],c[l]]:[h[l],(360+c[l])%360],[n,s]=M?t:d(t);w[i]+=n,y[i]+=s}}if(e>=(A-g)*(b-x)*(1-l)){k[i]=1;const[t,n]=p([w[i]/e,y[i]/e]);w[i]=t,y[i]=n}else k[i]=0,w[i]=0,y[i]=0}const A=new s.Z({width:m,height:g,pixels:[w,y],mask:k});return A.updateStatistics(),A}},55185:(t,e,n)=>{n.d(e,{GE:()=>p,KK:()=>w});n(59486);var i=n(93169),l=n(32718),s=n(16889),r=n(92026),o=n(66978),a=n(84936),h=n(92975),c=n(53866);const f=l.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),u=10;async function p(t,e,n,l){const s=performance.now(),r=d(e,n),h=performance.now(),c=g(e,r,n.width,n.height),p=performance.now(),m=function(t,e){const n=new a.Z,i=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*i),s=new Array(t.length);let r=0,o=0;for(const a of t){const t=r;for(const e of a)l[4*r+0]=e.x,l[4*r+1]=e.y,l[4*r+2]=e.t,l[4*r+3]=e.speed,r++;s[o++]={startVertex:t,numberOfVertices:a.length,totalTime:a[a.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:s}}(c,!0),x=performance.now(),w="Streamlines"===t?function(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let s=0,r=0;for(const p of l)s+=2*p.numberOfVertices,r+=6*(p.numberOfVertices-1);const o=new Float32Array(s*n),a=new Uint32Array(r);let h=0,c=0;function f(){a[c++]=h-2,a[c++]=h,a[c++]=h-1,a[c++]=h,a[c++]=h+1,a[c++]=h-1}function u(t,e,i,l,s,r,a,c){const f=h*n;let u=0;o[f+u++]=t,o[f+u++]=e,o[f+u++]=1,o[f+u++]=i,o[f+u++]=r,o[f+u++]=a,o[f+u++]=l/2,o[f+u++]=s/2,o[f+u++]=c,h++,o[f+u++]=t,o[f+u++]=e,o[f+u++]=-1,o[f+u++]=i,o[f+u++]=r,o[f+u++]=a,o[f+u++]=-l/2,o[f+u++]=-s/2,o[f+u++]=c,h++}for(const p of l){const{totalTime:t,timeSeed:n}=p;let l=null,s=null,r=null,o=null,a=null,h=null;for(let c=0;c<p.numberOfVertices;c++){const d=i[4*(p.startVertex+c)+0],m=i[4*(p.startVertex+c)+1],g=i[4*(p.startVertex+c)+2],x=i[4*(p.startVertex+c)+3];let w=null,y=null,k=null,M=null;if(c>0){w=d-l,y=m-s;const i=Math.sqrt(w*w+y*y);if(w/=i,y/=i,c>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,k=-n,M=t}else k=-y,M=w;null!==k&&null!==M&&(u(l,s,r,k,M,t,n,x),f())}l=d,s=m,r=g,a=w,h=y,o=x}u(l,s,r,-h,a,t,n,o)}return{vertexData:o,indexData:a}}(m,u):function(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:s}=t;let r=0,o=0;for(const B of s){const t=B.numberOfVertices-1;r+=4*t*2,o+=6*t*2}const a=new Float32Array(r*e),h=new Uint32Array(o);let c,f,u,p,d,m,g,x,w,y,k,M,A,b,C=0,v=0;function U(){h[v++]=C-8,h[v++]=C-7,h[v++]=C-6,h[v++]=C-7,h[v++]=C-5,h[v++]=C-6,h[v++]=C-4,h[v++]=C-3,h[v++]=C-2,h[v++]=C-3,h[v++]=C-1,h[v++]=C-2}function T(t,l,s,r,o,h,c,f,u,p,d,m,g,x){const w=C*e;let y=0;for(const e of[n,i])for(const n of[1,2,3,4])a[w+y++]=t,a[w+y++]=l,a[w+y++]=s,a[w+y++]=r,a[w+y++]=c,a[w+y++]=f,a[w+y++]=u,a[w+y++]=p,a[w+y++]=e,a[w+y++]=n,a[w+y++]=g,a[w+y++]=x,a[w+y++]=o/2,a[w+y++]=h/2,a[w+y++]=d/2,a[w+y++]=m/2,C++}function P(t,e){let n=w+k,i=y+M;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const s=w*n+y*i;n/=s,i/=s;let r=k+A,o=M+b;const a=Math.sqrt(r*r+o*o);r/=a,o/=a;const h=k*r+M*o;r/=h,o/=h,T(c,f,u,p,-i,n,d,m,g,x,-o,r,t,e),U()}function I(t,e,n,i,l,s){if(w=k,y=M,k=A,M=b,null==w&&null==y&&(w=k,y=M),null!=d&&null!=m){A=t-d,b=e-m;const n=Math.sqrt(A*A+b*b);A/=n,b/=n}null!=w&&null!=y&&P(l,s),c=d,f=m,u=g,p=x,d=t,m=e,g=n,x=i}function _(t,e){w=k,y=M,k=A,M=b,null==w&&null==y&&(w=k,y=M),null!=w&&null!=y&&P(t,e)}for(const B of s){c=null,f=null,u=null,p=null,d=null,m=null,g=null,x=null,w=null,y=null,k=null,M=null,A=null,b=null;const{totalTime:t,timeSeed:e}=B;for(let n=0;n<B.numberOfVertices;n++)I(l[4*(B.startVertex+n)+0],l[4*(B.startVertex+n)+1],l[4*(B.startVertex+n)+2],l[4*(B.startVertex+n)+3],t,e);_(t,e)}return{vertexData:a,indexData:h}}(m),y=performance.now();return(0,i.Z)("esri-2d-profiler")&&(f.info("I.1","_createFlowFieldFromData (ms)",Math.round(h-s)),f.info("I.2","_getStreamlines (ms)",Math.round(p-h)),f.info("I.3","createAnimatedLinesData (ms)",Math.round(x-p)),f.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(y-x)),f.info("I.5","createFlowMesh (ms)",Math.round(y-s)),f.info("I.6","Mesh size (bytes)",w.vertexData.buffer.byteLength+w.indexData.buffer.byteLength)),await Promise.resolve(),(0,o.k_)(l),w}function d(t,e){const n=function(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),s=new Array(2*l+1);let r=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));s[h+l]=t,r+=t}for(let h=-l;h<=l;h++)s[h+l]/=r;const o=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,r=0;for(let o=-l;o<=l;o++){if(n+o<0||n+o>=e)continue;const a=s[o+l];i+=a*t[2*(h*e+(n+o))+0],r+=a*t[2*(h*e+(n+o))+1]}o[2*(h*e+n)+0]=i,o[2*(h*e+n)+1]=r}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,r=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const c=s[a+l];i+=c*o[2*((t+a)*e+h)+0],r+=c*o[2*((t+a)*e+h)+1]}a[2*(t*e+h)+0]=i,a[2*(t*e+h)+1]=r}return a}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),s=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const r=t-l,o=i-s,a=l,h=s,c=l<e.width-1?l+1:l,f=s<e.height-1?s+1:s,u=n[2*(h*e.width+a)],p=n[2*(h*e.width+c)],d=n[2*(f*e.width+a)],m=n[2*(f*e.width+c)],g=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+c)+1];return[(u*(1-o)+d*o)*(1-r)+(p*(1-o)+m*o)*r,(g*(1-o)+n[2*(f*e.width+a)+1]*o)*(1-r)+(x*(1-o)+n[2*(f*e.width+c)+1]*o)*r]}:(t,i)=>{const l=Math.round(t),s=Math.round(i);return l<0||l>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+l)+0],n[2*(s*e.width+l)+1]]}}function m(t,e,n,i,l,s,r,o,a){const h=[];let c=n,f=i,u=0,[p,d]=e(c,f);p*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(p*p+d*d);let g,x;h.push({x:c,y:f,t:u,speed:m});for(let w=0;w<t.verticesPerLine;w++){let[n,i]=e(c,f);n*=t.velocityScale,i*=t.velocityScale;const p=Math.sqrt(n*n+i*i);if(p<t.minSpeedThreshold)return h;const d=n/p,m=i/p;if(c+=d*t.segmentLength,f+=m*t.segmentLength,u+=t.segmentLength/p,Math.acos(d*g+m*x)>t.maxTurnAngle)return h;if(t.collisions){const t=Math.round(c*a),e=Math.round(f*a);if(t<0||t>r-1||e<0||e>o-1)return h;const n=s[e*r+t];if(-1!==n&&n!==l)return h;s[e*r+t]=l}h.push({x:c,y:f,t:u,speed:p}),g=d,x=m}return h}function g(t,e,n,i){const l=[],s=new a.Z,r=1/Math.max(t.lineCollisionWidth,1),o=Math.round(n*r),h=Math.round(i*r),c=new Int32Array(o*h);for(let a=0;a<c.length;a++)c[a]=-1;const f=[];for(let a=0;a<i;a+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)f.push({x:e,y:a,sort:s.getFloat()});f.sort(((t,e)=>t.sort-e.sort));for(const{x:a,y:u}of f)if(s.getFloat()<t.density){const n=m(t,e,a,u,l.length,c,o,h,r);if(n.length<2)continue;l.push(n)}return l}function x(t,e){const n=e.pixels,{width:i,height:l}=e,r=new Float32Array(i*l*2),o=e.mask||new Uint8Array(i*l*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let s=0;s<i*l;s++)r[2*s+0]=n[0][s],r[2*s+1]=-n[1][s];else if("vector-magdir"===t)for(let a=0;a<i*l;a++){const t=n[0][a],e=(0,s.Vl)(n[1][a]),i=Math.cos(e-Math.PI/2),l=Math.sin(e-Math.PI/2);r[2*a+0]=i*t,r[2*a+1]=l*t}return{data:r,mask:o,width:i,height:l}}async function w(t,e,n,l,s,r){const o=performance.now(),a=(0,h.C5)(e.spatialReference);if(!a){const a=await y(t,e,n,l,s,r);return(0,i.Z)("esri-2d-profiler")&&f.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),(0,i.Z)("esri-2d-profiler")&&f.info("I.9","Number of parts",1),a}const[u,p]=a.valid,d=p-u,m=Math.ceil(e.width/d),g=e.width/m,x=Math.round(n/m);let w=e.xmin;const k=[],M=performance.now();for(let i=0;i<m;i++){const n=new c.Z({xmin:w,xmax:w+g,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});k.push(y(t,n,x,l,s,r)),w+=g}const A=await Promise.all(k);(0,i.Z)("esri-2d-profiler")&&f.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-M)),(0,i.Z)("esri-2d-profiler")&&f.info("I.9","Number of parts",A.length);const b={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let C=0;for(const i of A){for(let t=0;t<i.height;t++)for(let e=0;e<i.width;e++)C+e>=n||(b.data[2*(t*n+C+e)+0]=i.data[2*(t*i.width+e)+0],b.data[2*(t*n+C+e)+1]=i.data[2*(t*i.width+e)+1],b.mask[t*n+C+e]=i.mask[t*i.width+e]);C+=i.width}return(0,i.Z)("esri-2d-profiler")&&f.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),b}async function y(t,e,n,i,l,s){const o={requestProjectedLocalDirections:!0,signal:s};if((0,r.pC)(l)&&(o.timeExtent=l),"imagery"===t.type){await t.load({signal:s});const l=t.rasterInfo.dataType,a=await t.fetchImage(e,n,i,o);return!a||(0,r.Wi)(a.pixelData)||(0,r.Wi)(a.pixelData.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(l,a.pixelData.pixelBlock)}await t.load({signal:s});const a=t.rasterInfo.dataType,h=await t.fetchPixels(e,n,i,o);return!h||(0,r.Wi)(h.pixelBlock)?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(a,h.pixelBlock)}}}]);
//# sourceMappingURL=5345.dc41850e.chunk.js.map